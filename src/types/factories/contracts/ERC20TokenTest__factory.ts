/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  ERC20TokenTest,
  ERC20TokenTestInterface,
} from "../../contracts/ERC20TokenTest";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "testBurn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "testMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516103513803806103518339818101604052810190610032919061008d565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610108565b600081519050610087816100f1565b92915050565b6000602082840312156100a3576100a26100ec565b5b60006100b184828501610078565b91505092915050565b60006100c5826100cc565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6100fa816100ba565b811461010557600080fd5b50565b61023a806101176000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80639642ddaf1461003b578063e13aba4814610045575b600080fd5b61004361004f565b005b61004d6100df565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f193360646040518363ffffffff1660e01b81526004016100ab92919061018d565b600060405180830381600087803b1580156100c557600080fd5b505af11580156100d9573d6000803e3d6000fd5b50505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639dc29fac3360646040518363ffffffff1660e01b815260040161013b92919061018d565b600060405180830381600087803b15801561015557600080fd5b505af1158015610169573d6000803e3d6000fd5b50505050565b610178816101b6565b82525050565b610187816101f2565b82525050565b60006040820190506101a2600083018561016f565b6101af602083018461017e565b9392505050565b60006101c1826101c8565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006101fd826101e8565b905091905056fea2646970667358221220fed1a06c54c3f46642a8326335182870c0ee5f3705c3b5c991395e4a376ed75864736f6c63430008070033";

type ERC20TokenTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20TokenTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20TokenTest__factory extends ContractFactory {
  constructor(...args: ERC20TokenTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    token: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC20TokenTest> {
    return super.deploy(token, overrides || {}) as Promise<ERC20TokenTest>;
  }
  override getDeployTransaction(
    token: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(token, overrides || {});
  }
  override attach(address: string): ERC20TokenTest {
    return super.attach(address) as ERC20TokenTest;
  }
  override connect(signer: Signer): ERC20TokenTest__factory {
    return super.connect(signer) as ERC20TokenTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20TokenTestInterface {
    return new utils.Interface(_abi) as ERC20TokenTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20TokenTest {
    return new Contract(address, _abi, signerOrProvider) as ERC20TokenTest;
  }
}
