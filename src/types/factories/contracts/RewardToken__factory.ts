/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  RewardToken,
  RewardTokenInterface,
} from "../../contracts/RewardToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040518060400160405280601281526020017f5661756c742052657761726420546f6b656e00000000000000000000000000008152506040518060400160405280600381526020017f5652540000000000000000000000000000000000000000000000000000000000815250816003908051906020019062000096929190620000b8565b508060049080519060200190620000af929190620000b8565b505050620001cd565b828054620000c69062000168565b90600052602060002090601f016020900481019282620000ea576000855562000136565b82601f106200010557805160ff191683800117855562000136565b8280016001018555821562000136579182015b828111156200013557825182559160200191906001019062000118565b5b50905062000145919062000149565b5090565b5b80821115620001645760008160009055506001016200014a565b5090565b600060028204905060018216806200018157607f821691505b602082108114156200019857620001976200019e565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6117dd80620001dd6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806340c10f191161008c5780639dc29fac116100665780639dc29fac14610228578063a457c2d714610244578063a9059cbb14610274578063dd62ed3e146102a4576100cf565b806340c10f19146101be57806370a08231146101da57806395d89b411461020a576100cf565b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461012257806323b872dd14610140578063313ce56714610170578063395093511461018e575b600080fd5b6100dc6102d4565b6040516100e99190611143565b60405180910390f35b61010c60048036038101906101079190610f24565b610366565b6040516101199190611128565b60405180910390f35b61012a610389565b60405161013791906112a5565b60405180910390f35b61015a60048036038101906101559190610ed1565b610393565b6040516101679190611128565b60405180910390f35b6101786103c2565b60405161018591906112c0565b60405180910390f35b6101a860048036038101906101a39190610f24565b6103cb565b6040516101b59190611128565b60405180910390f35b6101d860048036038101906101d39190610f24565b610402565b005b6101f460048036038101906101ef9190610e64565b610410565b60405161020191906112a5565b60405180910390f35b610212610458565b60405161021f9190611143565b60405180910390f35b610242600480360381019061023d9190610f24565b6104ea565b005b61025e60048036038101906102599190610f24565b6104f8565b60405161026b9190611128565b60405180910390f35b61028e60048036038101906102899190610f24565b61056f565b60405161029b9190611128565b60405180910390f35b6102be60048036038101906102b99190610e91565b610592565b6040516102cb91906112a5565b60405180910390f35b6060600380546102e390611409565b80601f016020809104026020016040519081016040528092919081815260200182805461030f90611409565b801561035c5780601f106103315761010080835404028352916020019161035c565b820191906000526020600020905b81548152906001019060200180831161033f57829003601f168201915b5050505050905090565b600080610371610619565b905061037e818585610621565b600191505092915050565b6000600254905090565b60008061039e610619565b90506103ab8582856107ec565b6103b6858585610878565b60019150509392505050565b60006012905090565b6000806103d6610619565b90506103f78185856103e88589610592565b6103f291906112f7565b610621565b600191505092915050565b61040c8282610af9565b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606004805461046790611409565b80601f016020809104026020016040519081016040528092919081815260200182805461049390611409565b80156104e05780601f106104b5576101008083540402835291602001916104e0565b820191906000526020600020905b8154815290600101906020018083116104c357829003601f168201915b5050505050905090565b6104f48282610c59565b5050565b600080610503610619565b905060006105118286610592565b905083811015610556576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054d90611265565b60405180910390fd5b6105638286868403610621565b60019250505092915050565b60008061057a610619565b9050610587818585610878565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610691576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068890611245565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610701576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f8906111a5565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107df91906112a5565b60405180910390a3505050565b60006107f88484610592565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146108725781811015610864576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085b906111c5565b60405180910390fd5b6108718484848403610621565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156108e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108df90611225565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610958576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094f90611165565b60405180910390fd5b610963838383610e30565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156109e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109e0906111e5565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610a7c91906112f7565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610ae091906112a5565b60405180910390a3610af3848484610e35565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610b69576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b6090611285565b60405180910390fd5b610b7560008383610e30565b8060026000828254610b8791906112f7565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610bdc91906112f7565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610c4191906112a5565b60405180910390a3610c5560008383610e35565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610cc9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cc090611205565b60405180910390fd5b610cd582600083610e30565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610d5b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d5290611185565b60405180910390fd5b8181036000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508160026000828254610db2919061134d565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610e1791906112a5565b60405180910390a3610e2b83600084610e35565b505050565b505050565b505050565b600081359050610e4981611779565b92915050565b600081359050610e5e81611790565b92915050565b600060208284031215610e7a57610e79611499565b5b6000610e8884828501610e3a565b91505092915050565b60008060408385031215610ea857610ea7611499565b5b6000610eb685828601610e3a565b9250506020610ec785828601610e3a565b9150509250929050565b600080600060608486031215610eea57610ee9611499565b5b6000610ef886828701610e3a565b9350506020610f0986828701610e3a565b9250506040610f1a86828701610e4f565b9150509250925092565b60008060408385031215610f3b57610f3a611499565b5b6000610f4985828601610e3a565b9250506020610f5a85828601610e4f565b9150509250929050565b610f6d81611393565b82525050565b6000610f7e826112db565b610f8881856112e6565b9350610f988185602086016113d6565b610fa18161149e565b840191505092915050565b6000610fb96023836112e6565b9150610fc4826114af565b604082019050919050565b6000610fdc6022836112e6565b9150610fe7826114fe565b604082019050919050565b6000610fff6022836112e6565b915061100a8261154d565b604082019050919050565b6000611022601d836112e6565b915061102d8261159c565b602082019050919050565b60006110456026836112e6565b9150611050826115c5565b604082019050919050565b60006110686021836112e6565b915061107382611614565b604082019050919050565b600061108b6025836112e6565b915061109682611663565b604082019050919050565b60006110ae6024836112e6565b91506110b9826116b2565b604082019050919050565b60006110d16025836112e6565b91506110dc82611701565b604082019050919050565b60006110f4601f836112e6565b91506110ff82611750565b602082019050919050565b611113816113bf565b82525050565b611122816113c9565b82525050565b600060208201905061113d6000830184610f64565b92915050565b6000602082019050818103600083015261115d8184610f73565b905092915050565b6000602082019050818103600083015261117e81610fac565b9050919050565b6000602082019050818103600083015261119e81610fcf565b9050919050565b600060208201905081810360008301526111be81610ff2565b9050919050565b600060208201905081810360008301526111de81611015565b9050919050565b600060208201905081810360008301526111fe81611038565b9050919050565b6000602082019050818103600083015261121e8161105b565b9050919050565b6000602082019050818103600083015261123e8161107e565b9050919050565b6000602082019050818103600083015261125e816110a1565b9050919050565b6000602082019050818103600083015261127e816110c4565b9050919050565b6000602082019050818103600083015261129e816110e7565b9050919050565b60006020820190506112ba600083018461110a565b92915050565b60006020820190506112d56000830184611119565b92915050565b600081519050919050565b600082825260208201905092915050565b6000611302826113bf565b915061130d836113bf565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156113425761134161143b565b5b828201905092915050565b6000611358826113bf565b9150611363836113bf565b9250828210156113765761137561143b565b5b828203905092915050565b600061138c8261139f565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b838110156113f45780820151818401526020810190506113d9565b83811115611403576000848401525b50505050565b6000600282049050600182168061142157607f821691505b602082108114156114355761143461146a565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b61178281611381565b811461178d57600080fd5b50565b611799816113bf565b81146117a457600080fd5b5056fea2646970667358221220351a2ac3008d072de613c313a3d1684420ab897a363b6cb1fdd530242884850364736f6c63430008070033";

type RewardTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RewardTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RewardToken__factory extends ContractFactory {
  constructor(...args: RewardTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RewardToken> {
    return super.deploy(overrides || {}) as Promise<RewardToken>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): RewardToken {
    return super.attach(address) as RewardToken;
  }
  override connect(signer: Signer): RewardToken__factory {
    return super.connect(signer) as RewardToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RewardTokenInterface {
    return new utils.Interface(_abi) as RewardTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RewardToken {
    return new Contract(address, _abi, signerOrProvider) as RewardToken;
  }
}
