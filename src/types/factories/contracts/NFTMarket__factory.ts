/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { NFTMarket, NFTMarketInterface } from "../../contracts/NFTMarket";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_payToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_NFT",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "NFT",
    outputs: [
      {
        internalType: "contract IERC721",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "buyNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_newPrice",
        type: "uint256",
      },
    ],
    name: "createNFTSale",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "mintingFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "payToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "removeNFTSale",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newFee",
        type: "uint256",
      },
    ],
    name: "setMintingFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052670de0b6b3a76400006000553480156200001d57600080fd5b506040516200228438038062002284833981810160405281019062000043919062000507565b620000777f9ff18ed4a8f8a72d9a181ca731e463ee01782d8ae2b566d65727f6ecda268c6560001b620004ca60201b60201c565b620000ab7fa81367a68fc7946f3297da59001263d2a9f3a05b151cd32b04386337970f77ab60001b620004ca60201b60201c565b620000df7f7844b46316f93f4b73b76ef340de0316b392fef0b5e1f162463f96dce61e202b60001b620004ca60201b60201c565b620001137f030ace0782ddc8a51506b15d0d9a3fde4fab6da8d0eef6dde20d166743310fcb60001b620004ca60201b60201c565b6200012982620004cd60201b620016451760201c565b6200016b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200016290620005be565b60405180910390fd5b6200019f7fd68285b5d5002a91289cfe024337ea51969b031bce286072dee8714e6b3a2b2a60001b620004ca60201b60201c565b620001d37f98160ca5559c6cd5476b60f96df817813804cf192928710c19bb1539862cc95960001b620004ca60201b60201c565b620002077f2bb65c43f85e7e963295614fe69b2b9bdee23e21751cbbc70ac1c2e5a9e922d660001b620004ca60201b60201c565b6200023b7fd5abdc2195a83bb5b1967a407d851d563da1e3126f28e72126169f2d6c8fd4b960001b620004ca60201b60201c565b6200025181620004cd60201b620016451760201c565b62000293576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200028a906200059c565b60405180910390fd5b620002c77fadf1356b480bc91f0170946cbc59c6aa1d9f89d4f479c9d4a2735a67ee224d2760001b620004ca60201b60201c565b620002fb7f42eba6ba5e88eabaad6bba823fb191cc187c2dfa7c777361c06e8ba17b8bcf7460001b620004ca60201b60201c565b6200032f7f59b1c0b552f79d704feb2523ca4042229319c13b3fd75731ffebf7c8a8a509c560001b620004ca60201b60201c565b81600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620003a47f139bcff0f055be7f5eae8b7ba8274da6a97f6eb2a441664f646fd09f1e7928b160001b620004ca60201b60201c565b620003d87fa25e7f6e5885750f802ef4489de5b97f6d27fa7b0f620339bcd9b3f754c6ebfe60001b620004ca60201b60201c565b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200044d7feba10f246a1e3b47339d98897c79fba24ca15bde0c063e4a3ceaeed99883afa260001b620004ca60201b60201c565b620004817f9f9adb451e5ceb903b84af40b3559100b9f2973d2389f677554158fd0baf80a960001b620004ca60201b60201c565b33600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505062000696565b50565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60008151905062000501816200067c565b92915050565b6000806040838503121562000521576200052062000625565b5b60006200053185828601620004f0565b92505060206200054485828601620004f0565b9150509250929050565b60006200055d601583620005e0565b91506200056a826200062a565b602082019050919050565b600062000584601783620005e0565b9150620005918262000653565b602082019050919050565b60006020820190508181036000830152620005b7816200054e565b9050919050565b60006020820190508181036000830152620005d98162000575565b9050919050565b600082825260208201905092915050565b6000620005fe8262000605565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b7f4e4654204953204e4f54204120434f4e54524143540000000000000000000000600082015250565b7f544f4b454e204953204e4f54204120434f4e5452414354000000000000000000600082015250565b6200068781620005f1565b81146200069357600080fd5b50565b611bde80620006a66000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80635a64ad951161005b5780635a64ad95146100d65780637861db2b146100f45780637c0b8de21461011057806396336b301461012e5761007d565b80631d85bf0314610082578063238a47091461009e57806343db97b2146100ba575b600080fd5b61009c60048036038101906100979190611731565b61014c565b005b6100b860048036038101906100b39190611704565b610973565b005b6100d460048036038101906100cf9190611704565b610b99565b005b6100de611105565b6040516100eb91906119ac565b60405180910390f35b61010e60048036038101906101099190611731565b61110b565b005b6101186115f9565b60405161012591906118d1565b60405180910390f35b61013661161f565b60405161014391906118b6565b60405180910390f35b6101787f39e5162e761fa6709ab0cf92616287be1013b9d4879f307c3ad56d9424bd36ea60001b611668565b6101a47f89dc94c2b9adf66595ced626a931589bbcabd9227583dae89160df6b5905d18760001b611668565b6101d07f924287a4210ba100598be366608c1569279fc7febff7a8027ac4482dcb06dcc360001b611668565b6000600160008481526020019081526020016000205490506102147f313edb17c794b6a0873b5103bbc641f89ce20f4fc167bbd9592a7ed06852f3b360001b611668565b6102407f85e59b12af5196fe90778d6f4b36bd2d80cae2408169144c44e93a3102fb1fac60001b611668565b61026c7faa5db386362148b75fa26033fd98a2414d92ad018e353b416c835f07a3369df860001b611668565b6000811180156103515750600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e846040518263ffffffff1660e01b81526004016102d291906119ac565b60206040518083038186803b1580156102ea57600080fd5b505afa1580156102fe573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061032291906116aa565b73ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16145b610390576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610387906118ec565b60405180910390fd5b6103bc7f9735ef8aff2d5673519e30bbd2da7e8885b1bf47a990557926c70850f2ec79b660001b611668565b6103e87f920671595a9c826baee17ab0c98f3671493916f3072b2cfd83abb33266aa300260001b611668565b6104147fa382aa5103be05f7f459200fbce2a6ccee103e81f38f623544757dadf4fd4c6060001b611668565b60006002600085815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506104787f18bdc69b1adda4bdba8070c00887cb2c5ceed102a0cd460532c68d23a94c48a960001b611668565b6104a47f30094381f7f3aa9be67faf3872a028d9d1875a2897ff47570612762a55dfe1c760001b611668565b6104d07f940e7eff183f3659c0a9e2c4316d5d44bd40d8af1e5fe363ec2fc451cebd139a60001b611668565b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561053f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105369061196c565b60405180910390fd5b61056b7fbd505ae228855c770d7c65bd3643d4261f86f5158534a6057ab1762c484c259160001b611668565b6105977fdfced8938744b47f009823be00bbcc356d7422ab25caed6981d3a4f6c9d8dfac60001b611668565b6105c37f756fcb7c172760201d5538d78fad85cc7f40ffdca06beaf43b5afd179bdd1b3460001b611668565b6105ef7f8fcc6a649f1cc061eca250f2cc863a95dd9582e1ef2d474e6bdffe01c2633b1360001b611668565b81831015610632576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106299061194c565b60405180910390fd5b61065e7fc2a091ff738f06b75ca0b4e1aef1e576e2b22e7e69120d558b8a00ec5394f90f60001b611668565b61068a7f39a955c1fc3e636c546ddee4afad4b81d7b44f82d9f4b1a047e8f9748f1d1d6060001b611668565b6106b67ffd4ecc796d23f4fdb27eccfdfcb3091e7106a93dc5ee8b0213d54424c038f67360001b611668565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3383856040518463ffffffff1660e01b81526004016107159392919061187f565b602060405180830381600087803b15801561072f57600080fd5b505af1158015610743573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061076791906116d7565b506107947f5f1ca244a09e3f51014b64da1767bf38026b7fdaa7a1406a3faf031e49188c3160001b611668565b6107c07fc0a43fa2eabb5439db77dfd562a9e78093b6a41417ac0f489c7b6778e63de8cb60001b611668565b600060016000868152602001908152602001600020819055506108057f62ed43038c825fb8c18fd855789c9c83849b018bf086e81e5486e62f084c93f260001b611668565b6108317f5c5b58cdd4d0ddf85183acde8d26d98f60dc3634e68dc42a9b35e68dcb39365460001b611668565b60006002600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506108b07fd23e98d0e489b7f2748d2d3ad2d56e08b0196eecae050b6049522b98a27e102360001b611668565b6108dc7fcd26a34c3729b6375fac43756fed7ce0e940817de776ba43c65edb20ff96ff3360001b611668565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3033876040518463ffffffff1660e01b815260040161093b9392919061187f565b600060405180830381600087803b15801561095557600080fd5b505af1158015610969573d6000803e3d6000fd5b5050505050505050565b61099f7ff31d4656afddf6f7e0bb6adf911c87ea03eb92c5acc9f6b008bdb266d975eba860001b611668565b6109cb7f218c50c26f6913add45dd6c1b9299ba78c15e9c59eb2ee79f4a52c552cd95d4460001b611668565b6109f77f163f02066ce4d608a951d92c24eb79f381c9355576df5a5b498414acaece763d60001b611668565b610a237f1636326066ec45b4457ce37b2cc766d70f96280a7a3744f94f3ad31ea89ed41660001b611668565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ab3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aaa9061192c565b60405180910390fd5b610adf7f41adce24801206b9b635dc7188c3d1158474c0cc6d8da3609d6b0353c8601c2f60001b611668565b610b0b7f1fee873042d946294c5b8008967285f1bb4367d93df557038431d064088eb4d460001b611668565b610b377fa764e28ab3933ae3ee64d2bf1b8b03312169b33e8b2da9e81023365ce092af0660001b611668565b610b637ffbd96a6a4a6c13787331dc35dff7d8556150504542c64e196cbd63931465448860001b611668565b610b8f7ffd14a850a7d66ee8020eef3076c749372590715667dd79ef1b4d39a27da4726c60001b611668565b8060008190555050565b610bc57f5fc16d64e531eab843251af3b1490c102a1f0d061d1c919a93bf166b2976c64360001b611668565b610bf17f07b5d2655508fa57c03f4e23ce80577b05c7557be8a0f5ae6436c925fd85fa2560001b611668565b610c1d7fd9d72c31e178940dbfc268db716d917d01d55ccc442ce0a6ec6ea1ac8c68bf1860001b611668565b610c497fec482181c7d62ac5cdc8297ffaa97754c3cc3231bc1b7fcb86bbcf59925058d360001b611668565b60006001600083815260200190815260200160002054118015610d415750600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e826040518263ffffffff1660e01b8152600401610cc291906119ac565b60206040518083038186803b158015610cda57600080fd5b505afa158015610cee573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d1291906116aa565b73ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16145b610d80576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d77906118ec565b60405180910390fd5b610dac7f887cb4b5e8fbae8b4650a6813ca685ba6d88233ca2a5f203fe1a1cca53c21d1160001b611668565b610dd87f65439a85c824bf3b9ae6f932b050759cbd8318c66bd27fc23ac5bd1c3d69ef1760001b611668565b610e047ffa843c86ed2ab56afcea73d570cc0229c7c4994243b1119fba61e21a7723241660001b611668565b610e307f8bb25a72aad0e1f623fa6297673b4b753d8bdd1ab17ea24cf62a97fa7ae11d2f60001b611668565b6002600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ed1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ec89061198c565b60405180910390fd5b610efd7fdef1ef3d5fc0a483f8b8584e886cbc843abcb77203a2124c708270fcd0160d2360001b611668565b610f297fd8ce6098b8cf984e9ad70c1dec8136cb10029a7b0a6d23d78fdd32ee230f3c3f60001b611668565b610f557ff836f86fe9279a3323435774ed118416b57dbb16f35ad8c33b88a3c72354f0db60001b611668565b60006001600083815260200190815260200160002081905550610f9a7f6be66f53c86e9e75ee6ba8ad6b92597553c9421df51f6823bbb54ffe0ad5535760001b611668565b610fc67fd97daf346f813e4ef4a40cd47c99dcd4dbcdbbc823f49f833126a500c614582f60001b611668565b60006002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506110457ff70784ba7169fe468d664b2638d9c726164a8e413d2bf23fd5296f331fd9d88860001b611668565b6110717f92e4e184ee76110ebd6546fa457f8df455f92f2cf5e2510958d63e55943da2f960001b611668565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3033846040518463ffffffff1660e01b81526004016110d09392919061187f565b600060405180830381600087803b1580156110ea57600080fd5b505af11580156110fe573d6000803e3d6000fd5b5050505050565b60005481565b6111377f15b9853f715748590566f933cc893c302ab2a52825ea7c77f8d3b2ccd838e99560001b611668565b6111637fb807305c5b867685ab7b7aa3f99dbd9aaff2e727271804a12c14b05d69286f9f60001b611668565b61118f7f81e7fd03404b939dca496c4889d6a76b5643aadab7601305af47eda85f200bc160001b611668565b6111bb7f03d5b48b63f0b91e1cc7c2f2d530d9d8a9d4bf4ce9aa7e291fbbbfddd2acf7c860001b611668565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e836040518263ffffffff1660e01b815260040161121691906119ac565b60206040518083038186803b15801561122e57600080fd5b505afa158015611242573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061126691906116aa565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146112d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112ca9061198c565b60405180910390fd5b6112ff7f6d18c80cab6fff49f68bfd24540acea7deb8e773a9193e53b2e1eab822c575bd60001b611668565b61132b7fc6f1e9b2b3520af343064d95ec761446b2839b0d8c82449e7ce0e8dbd3bd241560001b611668565b6113577f05f1a4b87c32c6158cc900e5cb511760e91c3a5099575df7a33dd53e659e9e7f60001b611668565b6113837f7338c6ac67710dac7cb6adad80429ff0694e88ca13d59684ac35e2347a162a3e60001b611668565b600081116113c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113bd9061190c565b60405180910390fd5b6113f27fdaf4210ececb6bda9e997003ad996a40f4d46f265084c003668a3895ec1bda8060001b611668565b61141e7f73152c7fef971337d47782d442e9158e0d23e8faf9c83dac3b6fb9d95ee7015c60001b611668565b61144a7f97343702146b8315331d841850f53cae07190627179484388a11111fb8d4cee560001b611668565b80600160008481526020019081526020016000208190555061148e7f198de267aa44a5359f671eb0165d0af5e38b8722a241b0f721ca570f6036b36d60001b611668565b6114ba7f90167ee849652bb69d834a3fc45773254f84e832c83ccef096eb6d9c92bab08160001b611668565b336002600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506115387f992c958d62db31ceb5c0aecc39c2eccbcd2ba06ad92932ff052c30555de8fb6a60001b611668565b6115647f1127cf206bbd26b9f77510f800770e8504bb5d89a5a9d1c7d81073089ddb577960001b611668565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b81526004016115c39392919061187f565b600060405180830381600087803b1580156115dd57600080fd5b505af11580156115f1573d6000803e3d6000fd5b505050505050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b50565b60008151905061167a81611b63565b92915050565b60008151905061168f81611b7a565b92915050565b6000813590506116a481611b91565b92915050565b6000602082840312156116c0576116bf611a68565b5b60006116ce8482850161166b565b91505092915050565b6000602082840312156116ed576116ec611a68565b5b60006116fb84828501611680565b91505092915050565b60006020828403121561171a57611719611a68565b5b600061172884828501611695565b91505092915050565b6000806040838503121561174857611747611a68565b5b600061175685828601611695565b925050602061176785828601611695565b9150509250929050565b61177a816119d8565b82525050565b61178981611a20565b82525050565b61179881611a32565b82525050565b60006117ab600f836119c7565b91506117b682611a6d565b602082019050919050565b60006117ce6018836119c7565b91506117d982611a96565b602082019050919050565b60006117f1600a836119c7565b91506117fc82611abf565b602082019050919050565b60006118146012836119c7565b915061181f82611ae8565b602082019050919050565b60006118376009836119c7565b915061184282611b11565b602082019050919050565b600061185a600d836119c7565b915061186582611b3a565b602082019050919050565b61187981611a16565b82525050565b60006060820190506118946000830186611771565b6118a16020830185611771565b6118ae6040830184611870565b949350505050565b60006020820190506118cb6000830184611780565b92915050565b60006020820190506118e6600083018461178f565b92915050565b600060208201905081810360008301526119058161179e565b9050919050565b60006020820190508181036000830152611925816117c1565b9050919050565b60006020820190508181036000830152611945816117e4565b9050919050565b6000602082019050818103600083015261196581611807565b9050919050565b600060208201905081810360008301526119858161182a565b9050919050565b600060208201905081810360008301526119a58161184d565b9050919050565b60006020820190506119c16000830184611870565b92915050565b600082825260208201905092915050565b60006119e3826119f6565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000611a2b82611a44565b9050919050565b6000611a3d82611a44565b9050919050565b6000611a4f82611a56565b9050919050565b6000611a61826119f6565b9050919050565b600080fd5b7f4e4654204e4f54204f4e2053414c450000000000000000000000000000000000600082015250565b7f4e46542056414c55452043414e4e4f54204245205a45524f0000000000000000600082015250565b7f4f4e4c59204f574e455200000000000000000000000000000000000000000000600082015250565b7f494e53554646494349454e542050524943450000000000000000000000000000600082015250565b7f4e4654204f574e45520000000000000000000000000000000000000000000000600082015250565b7f4e4f54204e4654204f574e455200000000000000000000000000000000000000600082015250565b611b6c816119d8565b8114611b7757600080fd5b50565b611b83816119ea565b8114611b8e57600080fd5b50565b611b9a81611a16565b8114611ba557600080fd5b5056fea2646970667358221220e1d512438d2c2264301e6753fb969bd5a8726c5d2b91e3430ff9e44b43ef3d3c64736f6c63430008070033";

type NFTMarketConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFTMarketConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NFTMarket__factory extends ContractFactory {
  constructor(...args: NFTMarketConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _payToken: PromiseOrValue<string>,
    _NFT: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NFTMarket> {
    return super.deploy(_payToken, _NFT, overrides || {}) as Promise<NFTMarket>;
  }
  override getDeployTransaction(
    _payToken: PromiseOrValue<string>,
    _NFT: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_payToken, _NFT, overrides || {});
  }
  override attach(address: string): NFTMarket {
    return super.attach(address) as NFTMarket;
  }
  override connect(signer: Signer): NFTMarket__factory {
    return super.connect(signer) as NFTMarket__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTMarketInterface {
    return new utils.Interface(_abi) as NFTMarketInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NFTMarket {
    return new Contract(address, _abi, signerOrProvider) as NFTMarket;
  }
}
